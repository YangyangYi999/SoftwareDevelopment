/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package UserInterface.MarketManager.Market;

import UserInterface.Admin.UserAccounts.*;
import Business.Business;
import Business.Market.Market;
import Business.Person.Customer;
import Business.Person.UserAccount;
import UserInterface.LoginScreenJPanel;
import java.awt.CardLayout;
import java.awt.Component;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author shinychenw
 */
public class ManageMarketListJPanel extends javax.swing.JPanel {

    private JPanel cardSequenceJPanel;
    private Business business;
    
    /**
     * Creates new form ManageUserAccountJPanel
     */
    public ManageMarketListJPanel(JPanel cardSequenceJPanel,Business business) {
        initComponents();
        this.cardSequenceJPanel = cardSequenceJPanel;
        this.business = business;
        populateTable();

    }

    public void populateTable(){
        DefaultTableModel dtm = (DefaultTableModel) marketTable.getModel();
        dtm.setRowCount(0);
        for(Market market: business.getMarketList().getMarketList()){
                Object[] row = new Object[2];
                row[0]= market.getName();
                row[1]= market.getCustomerList();
                dtm.addRow(row);
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jTextField1 = new javax.swing.JTextField();
        jScrollPane1 = new javax.swing.JScrollPane();
        marketTable = new javax.swing.JTable();
        jLabel1 = new javax.swing.JLabel();
        btnFindUserAccount = new javax.swing.JButton();
        btnNewUserAccount = new javax.swing.JButton();
        btnViewUserAccount = new javax.swing.JButton();
        btnBack = new javax.swing.JButton();
        marketName = new javax.swing.JTextField();
        btnDelete = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();

        jTextField1.setText("jTextField1");

        marketTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null},
                {null, null},
                {null, null},
                {null, null}
            },
            new String [] {
                "MarketName", "CustomerList"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(marketTable);
        if (marketTable.getColumnModel().getColumnCount() > 0) {
            marketTable.getColumnModel().getColumn(0).setPreferredWidth(200);
            marketTable.getColumnModel().getColumn(1).setPreferredWidth(400);
        }

        jLabel1.setFont(new java.awt.Font("宋体", 0, 24)); // NOI18N
        jLabel1.setText("MarketList");

        btnFindUserAccount.setText("Find Market >>");
        btnFindUserAccount.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnFindUserAccountActionPerformed(evt);
            }
        });

        btnNewUserAccount.setText("Create New Market>>");
        btnNewUserAccount.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnNewUserAccountActionPerformed(evt);
            }
        });

        btnViewUserAccount.setText("Manage CustomerList >>");
        btnViewUserAccount.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnViewUserAccountActionPerformed(evt);
            }
        });

        btnBack.setText("<Back");
        btnBack.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBackActionPerformed(evt);
            }
        });

        marketName.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                marketNameActionPerformed(evt);
            }
        });

        btnDelete.setText("Delete select Market >>");
        btnDelete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDeleteActionPerformed(evt);
            }
        });

        jLabel2.setText("MarketName:");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(121, 121, 121)
                .addComponent(btnDelete, javax.swing.GroupLayout.PREFERRED_SIZE, 239, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(btnFindUserAccount, javax.swing.GroupLayout.PREFERRED_SIZE, 239, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(89, 89, 89))
            .addGroup(layout.createSequentialGroup()
                .addGap(132, 132, 132)
                .addComponent(btnViewUserAccount, javax.swing.GroupLayout.PREFERRED_SIZE, 220, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(btnNewUserAccount)
                .addGap(116, 116, 116))
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(btnBack)
                        .addGap(122, 122, 122)
                        .addComponent(jLabel1))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(144, 144, 144)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 587, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(124, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel2)
                .addGap(119, 119, 119)
                .addComponent(marketName, javax.swing.GroupLayout.PREFERRED_SIZE, 170, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(256, 256, 256))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(30, 30, 30)
                        .addComponent(jLabel1))
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(btnBack)))
                .addGap(26, 26, 26)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 154, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(marketName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel2))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 48, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnViewUserAccount)
                    .addComponent(btnNewUserAccount))
                .addGap(41, 41, 41)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnDelete)
                    .addComponent(btnFindUserAccount))
                .addGap(68, 68, 68))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void btnNewUserAccountActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnNewUserAccountActionPerformed
        // TODO add your handling code here:
    if(marketName.getText().matches("\\s*")){
      JOptionPane.showMessageDialog(this, "Invalid input!");
    }else{
       Market market =  business.getMarketList().addMarket();
       market.setName(marketName.getText());
       marketName.setText("");
       JOptionPane.showMessageDialog(this, "Add successfully!");
       populateTable();
    }
    }//GEN-LAST:event_btnNewUserAccountActionPerformed

    private void btnBackActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBackActionPerformed

        cardSequenceJPanel.remove(this);
        CardLayout layout = (CardLayout) cardSequenceJPanel.getLayout();
        layout.previous(cardSequenceJPanel);
    }//GEN-LAST:event_btnBackActionPerformed

    private void btnViewUserAccountActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnViewUserAccountActionPerformed
    int row = marketTable.getSelectedRow();
    if(row<0){
    JOptionPane.showMessageDialog(this,"Please select any row from the table!");
    }else{
        Market market = business.getMarketList().getMarketList().get(row);
        ManageCustomerJPanel mcjp = new ManageCustomerJPanel( cardSequenceJPanel,business,market);
        cardSequenceJPanel.add("ManageCustomerJPanel",mcjp);
         CardLayout layout = (CardLayout) cardSequenceJPanel.getLayout();
         layout.next(cardSequenceJPanel);
    } 
    }//GEN-LAST:event_btnViewUserAccountActionPerformed
Market findMarket(String name){
for(Market market : business.getMarketList().getMarketList()){
if(market.getName().equals(name)){

return market;}
}return null;
}
    private void btnFindUserAccountActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnFindUserAccountActionPerformed
      if(marketName.getText().matches("")){
          JOptionPane.showMessageDialog(this, "Please type in the market name.");
      }else if(findMarket(marketName.getText())==null){
      JOptionPane.showMessageDialog(this,"This market does not exit!");
      }else{
      DefaultTableModel dtm = (DefaultTableModel) marketTable.getModel();
        dtm.setRowCount(0);
         
                Object[] row = new Object[2];
                row[0]= findMarket(marketName.getText()).getName();
                row[1]= findMarket(marketName.getText()).getCustomerList();
                dtm.addRow(row);
        
      }
      
    }//GEN-LAST:event_btnFindUserAccountActionPerformed

    private void marketNameActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_marketNameActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_marketNameActionPerformed

    private void btnDeleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDeleteActionPerformed
        // TODO add your handling code here:
        int selectedRow = marketTable.getSelectedRow();
        if(selectedRow >=0){
            int dialogButton = JOptionPane.YES_NO_OPTION;
            int dialogResult = JOptionPane.showConfirmDialog(null, "Would you like to delete the person?", "Warning", dialogButton);
            if(dialogResult == JOptionPane.YES_NO_OPTION){
               business.getMarketList().getMarketList().remove(selectedRow);
                populateTable(); 
            }
        }
        else{
            JOptionPane.showMessageDialog(null,"Please select a row from the table first!","Warning",JOptionPane.WARNING_MESSAGE);
        }
    }//GEN-LAST:event_btnDeleteActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnBack;
    private javax.swing.JButton btnDelete;
    private javax.swing.JButton btnFindUserAccount;
    private javax.swing.JButton btnNewUserAccount;
    private javax.swing.JButton btnViewUserAccount;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextField jTextField1;
    private javax.swing.JTextField marketName;
    private javax.swing.JTable marketTable;
    // End of variables declaration//GEN-END:variables
}
